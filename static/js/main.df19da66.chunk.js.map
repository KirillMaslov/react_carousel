{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","leftMargin","setLeftMargin","itemsPassed","setItemsPassed","className","style","width","map","image","imageIndex","transform","transition","src","alt","type","onClick","itemsToUpdate","length","i","disabled","App","state","handleChange","e","currentTarget","name","value","setState","prevState","this","htmlFor","id","max","min","onChange","checked","event","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df19da66.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [leftMargin, setLeftMargin] = useState(0);\n  const [itemsPassed, setItemsPassed] = useState(0);\n\n  const previousImages = () => {\n    let itemsToUpdate = 0;\n\n    if (infinite && (itemsPassed <= 0)) {\n      itemsToUpdate = images.length - frameSize;\n      setItemsPassed(itemsPassed + itemsToUpdate);\n      setLeftMargin(leftMargin - (itemWidth * itemsToUpdate));\n    } else {\n      for (let i = 0; i < step; i += 1) {\n        if (itemsPassed - i > 0) {\n          itemsToUpdate += 1;\n        }\n      }\n\n      setItemsPassed(itemsPassed - itemsToUpdate);\n      setLeftMargin(leftMargin + (itemWidth * itemsToUpdate));\n    }\n  };\n\n  const nextImages = () => {\n    if (infinite && itemsPassed >= images.length - frameSize) {\n      setItemsPassed(0);\n      setLeftMargin(0);\n    } else {\n      let itemsToUpdate = 0;\n\n      for (let i = 0; i < step; i += 1) {\n        if (itemsPassed + i < images.length - frameSize) {\n          itemsToUpdate += 1;\n        }\n      }\n\n      setItemsPassed(itemsPassed + itemsToUpdate);\n      setLeftMargin(leftMargin - (itemWidth * itemsToUpdate));\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{ width: `${frameSize * itemWidth}px` }}\n      >\n        {images.map((image, imageIndex) => (\n          <li\n            className=\"Carousel__list-item\"\n            key={image}\n            style={{\n              transform: `translateX(${leftMargin}px)`,\n              transition: `all ${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              width={`${itemWidth}px`}\n              alt={`${imageIndex + 1} ${step + frameSize + animationDuration}`}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__box\">\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={previousImages}\n          disabled={!infinite && (itemsPassed === 0)}\n        >\n          Prev\n        </button>\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={nextImages}\n          disabled={!infinite && (itemsPassed >= images.length - frameSize)}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__form\">\n          {/* eslint-disable-next-line */}\n          <h1 className=\"App__title\" data-cy=\"title\">Carousel with {images.length} images</h1>\n          <label htmlFor=\"step\">\n            <p className=\"App__text\">Step</p>\n            <input\n              type=\"number\"\n              className=\"App__input\"\n              name=\"step\"\n              id=\"step\"\n              max=\"10\"\n              min=\"1\"\n              value={step}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"frameSize\">\n            <p className=\"App__text\">Frame size</p>\n            <input\n              type=\"number\"\n              className=\"App__input\"\n              name=\"frameSize\"\n              id=\"frameSize\"\n              max=\"10\"\n              min=\"1\"\n              value={frameSize}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"itemWidth\">\n            <p className=\"App__text\">Item Width</p>\n            <input\n              type=\"number\"\n              className=\"App__input\"\n              name=\"itemWidth\"\n              id=\"itemWidth\"\n              min=\"130\"\n              step=\"10\"\n              value={itemWidth}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"animationDuration\">\n            <p className=\"App__text\">Animation Duration</p>\n            <input\n              type=\"number\"\n              className=\"App__input\"\n              name=\"animationDuration\"\n              id=\"animationDuration\"\n              min=\"500\"\n              step=\"100\"\n              value={animationDuration}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"infinite\">\n            <p className=\"App__text\">Infinite</p>\n            <input\n              type=\"checkbox\"\n              name=\"infinite\"\n              className=\"App__input\"\n              id=\"infinite\"\n              value={animationDuration}\n              checked={this.state.infinite}\n              onChange={(event) => {\n                this.setState({ infinite: event.target.checked });\n              }}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}